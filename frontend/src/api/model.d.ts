/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type CombinedObject = FlowData & Flow & Policy & Prompt & Stage;
export type FlowData =
  | {
      component: "access_denied";
      message: string;
      [k: string]: unknown;
    }
  | {
      component: "identification";
      show_source_labels: boolean;
      sources: Source[];
      user_fields: ("email" | "name" | "uuid")[];
      [k: string]: unknown;
    }
  | {
      component: "password";
      recovery_url: string;
      [k: string]: unknown;
    }
  | {
      component: "redirect";
      to: string;
      [k: string]: unknown;
    }
  | {
      component: "error";
      message: string;
      [k: string]: unknown;
    };

export interface Source {
  icon_url: string;
  name: string;
  [k: string]: unknown;
}
export interface Flow {
  /**
   * This interface was referenced by `Flow`'s JSON-Schema
   * via the `definition` "AuthenticationRequirement".
   */
  authentication: "superuser" | "required" | "none" | "ignored";
  bindings: FlowBinding[];
  /**
   * This interface was referenced by `Flow`'s JSON-Schema
   * via the `definition` "FlowDesignation".
   */
  designation: "authentication";
  entries: FlowEntry[];
  slug: string;
  title: string;
  uid: number;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `Flow`'s JSON-Schema
 * via the `definition` "FlowBinding".
 */
export interface FlowBinding {
  enabled: boolean;
  /**
   * This interface was referenced by `Flow`'s JSON-Schema
   * via the `definition` "FlowBindingKind".
   */
  kind: string | Reference;
  negate: boolean;
  order: number;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `Flow`'s JSON-Schema
 * via the `definition` "Reference".
 */
export interface Reference {
  /**
   * This interface was referenced by `Flow`'s JSON-Schema
   * via the `definition` "ReferenceId".
   */
  id: string | number;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `Flow`'s JSON-Schema
 * via the `definition` "FlowEntry".
 */
export interface FlowEntry {
  bindings: FlowBinding[];
  ordering: number;
  stage: Reference;
  [k: string]: unknown;
}
export interface Policy {
  /**
   * This interface was referenced by `Policy`'s JSON-Schema
   * via the `definition` "PolicyKind".
   */
  kind:
    | {
        kind: "password_expiry";
        max_age: number;
        [k: string]: unknown;
      }
    | {
        kind: "password_strength";
        [k: string]: unknown;
      }
    | {
        kind: "expression";
        [k: string]: unknown;
      };
  slug: string;
  uid: number;
  [k: string]: unknown;
}
export interface Prompt {
  field_key: string;
  help_text?: string | null;
  /**
   * This interface was referenced by `Prompt`'s JSON-Schema
   * via the `definition` "PromptKind".
   */
  kind:
    | "username"
    | "email"
    | "password"
    | "text"
    | "text_read_only"
    | "signed_number"
    | "unsigned_number"
    | "checkbox"
    | "switch"
    | "date"
    | "date_time"
    | "seperator"
    | "static"
    | "locale";
  label: string;
  placeholder?: string | null;
  required: boolean;
  uid: number;
  [k: string]: unknown;
}
export interface Stage {
  /**
   * This interface was referenced by `Stage`'s JSON-Schema
   * via the `definition` "StageKind".
   */
  kind:
    | {
        kind: "deny";
        [k: string]: unknown;
      }
    | {
        bindings: PromptBinding[];
        kind: "prompt";
        [k: string]: unknown;
      }
    | {
        kind: "identification";
        password?: Reference1 | null;
        user_fields: ("email" | "name" | "uuid")[];
        [k: string]: unknown;
      }
    | {
        kind: "user_login";
        [k: string]: unknown;
      }
    | {
        kind: "user_logout";
        [k: string]: unknown;
      }
    | {
        kind: "user_write";
        [k: string]: unknown;
      }
    | {
        backends: ("internal" | "l_d_a_p")[];
        kind: "password";
        [k: string]: unknown;
      }
    | {
        kind: "consent";
        /**
         * This interface was referenced by `Stage`'s JSON-Schema
         * via the `definition` "ConsentMode".
         */
        mode:
          | {
              mode: "always";
              [k: string]: unknown;
            }
          | {
              mode: "once";
              [k: string]: unknown;
            }
          | {
              duration: number;
              mode: "until";
              [k: string]: unknown;
            };
        [k: string]: unknown;
      };
  slug: string;
  timeout: number;
  uid: number;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `Stage`'s JSON-Schema
 * via the `definition` "PromptBinding".
 */
export interface PromptBinding {
  order: number;
  prompt: Reference1;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `Stage`'s JSON-Schema
 * via the `definition` "Reference".
 */
export interface Reference1 {
  /**
   * This interface was referenced by `Stage`'s JSON-Schema
   * via the `definition` "ReferenceId".
   */
  id: string | number;
  [k: string]: unknown;
}
