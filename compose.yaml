version: "3.9"
services:
  backend:
    build: .
    environment:
      POSTGRES_HOST: db
      POSTGRES_DBNAME: authentra
      POSTGRES_USER: authentra
      POSTGRES_PASSWORD: authentra
      SECRET: really_secret
      ALLOWED_ORIGINS: "http://localhost:5173 http://127.0.0.1:8080 http://127.0.0.1:5173 http://192.168.178.70:5173"
    depends_on:
      db:
        condition: service_healthy
      jaeger:
        condition: service_healthy
    links:
      - db
    ports:
      - "8080:8080"
  frontend:
    build: frontend/
    environment:
      PUBLIC_API_URL: /api
      INTERNAL_API_URL: http://backend:8080/api
    depends_on:
      db:
        condition: service_healthy
      jaeger:
        condition: service_healthy
    links:
      - db
    ports:
      - "5173:3000"
  db:
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_USER: authentra
      POSTGRES_DB: authentra
      POSTGRES_PASSWORD: authentra
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U authentra"]
      interval: 5s
      timeout: 5s
      retries: 5
  jaeger:
    image: jaegertracing/all-in-one
    environment:
      COLLECTOR_OTLP_ENABLED: true
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://jaeger:16686/ || exit 1
      interval: 2s
      retries: 60
      start_period: 10s
      timeout: 10s
    ports:
      - "16686:16686"
      - "6831:6831/udp"
      - "6832:6832/udp"
